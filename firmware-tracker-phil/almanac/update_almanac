#!/usr/bin/env bash

source_dir="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
cd $source_dir

source ../configs/${1}/gnss

current_timestamp=`date "+%s"`

newest_almanac=0

shopt -s nullglob
directories=( */ )
if [[ ${#directories[@]} > 0 ]];
then
    shopt -u nullglob

    for i in $(ls -d */ | cut -f1 -d'/');
    do
        candidate_almanac=${i%%/};
        if [ -f ${candidate_almanac}/gnss_almanac.h ];
        then
            almanac_age=$(((${current_timestamp}-${candidate_almanac})/3600))
            if (( ${candidate_almanac} > ${newest_almanac} ));
            then
                newest_almanac=${candidate_almanac};
            fi
        fi
    done
fi;
shopt -u nullglob

if (( (${current_timestamp} - ${newest_almanac}) > ${gnss_data_maxage} ));
then
    source ./authtoken

    aid_data_file=$(mktemp);

    curl -s "http://online-live1.services.u-blox.com/GetOnlineData.ashx?token=${authtoken};gnss=${gnss_constellations};datatype=${gnss_datatype};lat=${gnss_pos_latitude};lon=${gnss_pos_longitude};pacc=${gnss_pos_radius}" -o "${aid_data_file}"
    if [ $? -gt 0 ]
    then
        # HTTP Failed
        if (( ${newest_almanac} == 0 ));
        then
            echo "blank";
            exit 2;
        else
            echo "${newest_almanac}";
            exit 1;
        fi
    fi

    almanac_timestamp=`date "+%s"`

    aid_lines=`xxd -p ${aid_data_file} | tr -d '\n'| sed -e 's/b562/\nb562/g'`
    rm -f ${aid_data_file};

    prefix_time_aid="b562134018001000"
    #b562 1340 1800 1000 0012e20705070a2f3000806e51060a000000000000003aa7
    # 1340: UBX-MGA-INI
    # Length: 18 (dec: 24)
    # Type: 10.00 UBX-MGA-INI-TIME_UTC (UNWANTED!)

    prefix_position_aid="b562134014000100"
    #b562 1340 1400 0100 0000a087321e40f081fd0000000040787d01c321
    # 1340: UBX-MGA-INI
    # Length: 14 (dec: 20)
    # Type: 01.00 UBX-MGA-INI-POS_LLH (Lat/Lon Position)

    prefix_gps_almanac="b562130024000200"
    #b562 1300 2400 0200 01002d3fd04e9d1243fdf00ca100864c9fffcf4d1900780ebfffcfffffff000000000547
    # 1300: UBX-MGA-GPS (GPS Ephemerides)
    # Length: 24 (dec: 36)
    # Type: 02.00 UBX-MGA-GPS-ALM (GPS Almanac)

    prefix_glonass_almanac="b562130624000200"
    #b562 1306 2400 0200 01005a030101faffec016447fdffce1a0000cbbd0200a53febffe30185e700000000bc6f
    # 1306: UBX-MGA-GLO (GLONASS Ephemerides)
    # Length: 24 (dec: 36)
    # Type: 02.00 UBX-MGA-GLO-ALM (GLONASS Almanac)

    # Filter for lines we're interested in
    relevant_lines=`echo "${aid_lines}" | grep -e ${prefix_position_aid} -e ${prefix_gps_almanac} -e ${prefix_glonass_almanac}`

    mkdir "${almanac_timestamp}/";
    gnss_almanac_file="${almanac_timestamp}/gnss_almanac.h"
    echo "" > "${gnss_almanac_file}";

    echo "#ifndef __GNSS_ALMANAC_H__" >> "${gnss_almanac_file}";
    echo "#define __GNSS_ALMANAC_H__" >> "${gnss_almanac_file}";
    echo "" >> ${gnss_almanac_file};
    echo "// Downloaded: $(date -d "@${almanac_timestamp}" "+%Y-%m-%d %H:%M:%S")" >> "${gnss_almanac_file}";
    echo "" >> ${gnss_almanac_file};
    echo "#define   GNSS_ALMANAC_PRESENT" >> ${gnss_almanac_file};

    i=0
    while read -r line; do
        line=`echo "${line}" |  sed -e 's/../0x\0, /g'`;
        echo "const uint8_t gnss_almanac_${i}[] = { ${line} };" >> "${gnss_almanac_file}";
        echo "const uint32_t gnss_almanac_length_${i} = $(echo "${line}" | tr -d -c 'x' | awk '{ print length; }');" >> "${gnss_almanac_file}";
        i=$(($i+1));
    done <<< "${relevant_lines}"

    echo "#define GNSS_SEND_ALMANAC() \\" >> "${gnss_almanac_file}";
    j=0
    while [  $j -lt $i ]; do
        echo "uart_send_blocking_len((uint8_t*)gnss_almanac_${j},gnss_almanac_length_${j}); \\" >> "${gnss_almanac_file}";
        echo "_delay_ms(5); \\" >> "${gnss_almanac_file}";
        let j=j+1
    done
    echo "_delay_ms(5);" >> "${gnss_almanac_file}";

    echo "#define   GNSS_ALMANAC_LENGTH     ${i}" >> "${gnss_almanac_file}";
    echo "" >> ${gnss_almanac_file};
    echo "#endif /* __GNSS_ALMANAC_H__ */" >> "${gnss_almanac_file}";
    
    echo "${almanac_timestamp}";
    exit 0;
else
    if (( ${newest_almanac} == 0 ));
    then
        echo "blank";
        exit 2;
    else
        echo "${newest_almanac}";
        exit 1;
    fi
fi
#!/usr/bin/env bash

source_dir="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
cd $source_dir

COLOUR_GREEN='\033[0;32m'
COLOUR_YELLOW='\033[1;33m'
COLOUR_PURPLE='\033[0;35m'
COLOUR_RED='\033[0;31m'
COLOUR_OFF='\033[0;00m'
CLEAR_LINE='\033[2K'

_ERROR_="$COLOUR_RED[ERROR]$COLOUR_OFF"
_INFO_="$COLOUR_PURPLE[INFO]$COLOUR_OFF"
_DEBUG_="$COLOUR_YELLOW[DEBUG]$COLOUR_OFF"

opt_quiet=false

print() {
  if ! $opt_quiet
  then
    echo -e $@ >&1
  fi
}

libopencm3=libopencm3/
binary=main.elf

list_available_configs() {
  print "Available payload configs:"
  for i in $(ls -d configs/*/);
  do
    if [ -f ${i}/config.h ]; then
      echo " * ${i}";
    fi
  done
}

if [ -z "$1" ]
then
  print "$_ERROR_ No payload specified for config";
  list_available_configs;
  exit 1;
fi

payload=$1
payload_config_path="configs/${payload}/"

if [ ! -f ${payload_config_path}/config.h ]; then
  print "$_ERROR_ Config for payload ${payload} not found";
  list_available_configs;
  exit 1;
fi
print "$_INFO_ Using payload config: ${payload_config_path}"

echo -ne "$_INFO_ Downloading GNSS Aid Data... \r"
gnss_aid_dir=`gnss_aid/update_gnss_aid "${payload}"`
gnss_aid_state=$?;
if [ ${gnss_aid_state} -eq 0 ];
then
  print "$_INFO_ Latest GNSS Aid Data Downloaded."
elif [ ${gnss_aid_state} -eq 1 ]; then
  print "$_INFO_ Using existing GNSS Aid Data"
elif [ ${gnss_aid_state} -eq 2 ]; then
  print "$_INFO_ Warning: Failed to get GNSS Aid Data, using blank template."
fi

config_test="$(mktemp)"
gcc configs/test.c -I ${payload_config_path} -I gnss_aid/${gnss_aid_dir}/ -o ${config_test}
${config_test}
rm -f ${config_test}

if [ ! -f ${libopencm3}/lib/libopencm3_stm32f0.a ]; then
  echo -ne "$_INFO_ Compiling libopencm3... \r"
  cd ${libopencm3} && make clean &> /dev/null && make &> /dev/null;
  if [ $? -gt 0 ]
  then
    print "$_ERROR_ Failed to compile libopencm3"
    exit 1
  fi
  print "$_INFO_ Compiled libopencm3.     "
  cd $source_dir;
fi

echo -ne "$_INFO_ Compiling firmware... \r"  
make clean && make CONFIG_DIR=${payload_config_path} ALMANAC_DIR=gnss_aid/${gnss_aid_dir}/
if [ $? -gt 0 ]
then
  print "$_ERROR_ Failed to compile firmware"
  exit 1
fi
echo -e "$_INFO_ Compiled firmware.      "

size=`arm-none-eabi-size ${binary} | sed -n 2p`

size_text=`echo $size | grep -o -E '[0-9]+' | sed -n 1p`
size_data=`echo $size | grep -o -E '[0-9]+' | sed -n 2p`
size_bss=`echo $size | grep -o -E '[0-9]+' | sed -n 3p`

size_flash=$(($size_text+$size_data))
size_ram=$(($size_data+$size_bss))

printf "RAM Usage: %5s B\n" ${size_ram}
printf "ROM Usage: %5s B\n" ${size_flash}

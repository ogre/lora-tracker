#!/usr/bin/env bash

source_dir="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
cd $source_dir

COLOUR_GREEN='\033[0;32m'
COLOUR_YELLOW='\033[1;33m'
COLOUR_PURPLE='\033[0;35m'
COLOUR_RED='\033[0;31m'
COLOUR_OFF='\033[0;00m'
CLEAR_LINE='\033[2K'

_ERROR_="$COLOUR_RED[ERROR]$COLOUR_OFF"
_INFO_="$COLOUR_PURPLE[INFO]$COLOUR_OFF"
_DEBUG_="$COLOUR_YELLOW[DEBUG]$COLOUR_OFF"

opt_quiet=false

print() {
  if ! $opt_quiet
  then
    echo -e $@ >&1
  fi
}

flashtool="arm-none-eabi-gdb"
programmer=false
part_id=false
binary=main.elf
libopencm3=libopencm3/

get_part_id() {
  local id_file=$(mktemp)
  local log_file="/dev/null"

  $flashtool --batch --batch-silent                         \
  -ex 'target extended-remote '$programmer                  \
  -ex 'monitor swdp_scan'                                   \
  -ex 'attach 1'                                            \
  -ex 'set mem inaccessible-by-default off'                 \
  -ex 'dump binary memory '$id_file' 0x40015800 0x40015805' \
  >"$log_file" 2>&1
  
  if [ -e "$id_file" ]; then
    id=`xxd -p "$id_file"`
    echo "$id"
    return 0
  else
    return 1
  fi
}

wait_for_part_id() {
  until part_id=`get_part_id` && ! [[ -z ${part_id/ /} ]]; do
    sleep 0.2
  done

  echo "$part_id"
  return 0
}

# Returns full file path on success, nothing on failure
locate_black_magic() {
  probe="`ls 2>/dev/null -Ub1 -- /dev/serial/by-id/usb-Black_Sphere_Technologies_Black_Magic_Probe_*-if00 | head -n 1`"
  if ! [ -z "$probe" ]
  then
    echo "$probe"
    return 0
  fi
  return 1
}

wait_for_black_magic() {
  # Find the programmer
  until programmer="`locate_black_magic`"; do
    sleep 0.2
  done
  echo "$programmer"
}

flash_device() {
  $flashtool -q --batch \
  -ex 'file '$binary                          \
  -ex 'target extended-remote '$programmer    \
  -ex 'monitor swdp_scan'                     \
  -ex 'attach 1'                              \
  -ex 'load '$binary                          \
  -ex 'compare-sections';
}

list_available_configs() {
  print "Available payload configs:"
  for i in $(ls -d configs/*/);
  do
    if [ -f ${i}/config.h ]; then
      echo " * ${i}";
    fi
  done
}

if [ -z "$1" ]
then
  print "$_ERROR_ No payload specified for config";
  list_available_configs;
  exit 1;
fi

payload=$1
payload_config_path="configs/${payload}/"

if [ ! -f ${payload_config_path}/config.h ]; then
  print "$_ERROR_ Config for payload ${payload} not found";
  list_available_configs;
  exit 1;
fi

if [ ! -f ${libopencm3}/lib/libopencm3_stm32f0.a ]; then
  print "$_INFO_ Compiling libopencm3.."
  cd ${libopencm3} && make clean &> /dev/null && make &> /dev/null;
  if [ $? -gt 0 ]
  then
    print_err "$_ERROR_ Compilation failed"
    exit 1
  fi
  cd $source_dir;
fi

print "$_INFO_ Compiling for payload: ${payload}"
  
make clean && make CONFIG_DIR=${payload_config_path}
if [ $? -gt 0 ]
then
  print_err "$_ERROR_ Compilation failed"
  exit 1
fi
print "$_INFO_ Compiled."

if ! programmer="`wait_for_black_magic`"; then
  return 1
fi
print "$_INFO_ Programmer: Black Magic Probe"

if ! part_id=`wait_for_part_id`; then
  print "$_ERROR_ Unable to get part_id"
  return 1
fi
print "$_INFO_ STM32 ID: $part_id"

flash_device

#playsound tools/flash.wav
print -e "$CLEAR_LINE$COLOUR_PURPLE[Programmer]$COLOUR_GREEN Flashed$COLOUR_OFF"